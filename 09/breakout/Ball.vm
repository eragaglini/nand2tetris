function Ball.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push argument 3
pop this 4
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 2
call Graphics.drawBall 3
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 2
call Graphics.eraseBall 3
pop temp 0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.erase 1
pop temp 0
push this 0
push this 3
add
pop this 0
push this 1
push this 4
add
pop this 1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.check_collision_with_walls 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
push constant 10
eq
push this 0
push constant 501
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
not
push constant 0
call Ball.bounce 3
pop temp 0
label IF_FALSE0
push this 1
push constant 10
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 0
push constant 0
not
call Ball.bounce 3
pop temp 0
label IF_FALSE1
push this 1
push constant 240
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 0
label IF_FALSE2
push local 0
return
function Ball.bounce 0
push argument 0
pop pointer 0
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 1
neg
call Math.multiply 2
pop this 3
label IF_FALSE0
push argument 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
push constant 1
neg
call Math.multiply 2
pop this 4
label IF_FALSE1
push constant 0
return
