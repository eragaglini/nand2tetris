function Snake.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 3
pop this 3
push constant 0
pop this 7
push constant 100
call Array.new 1
pop this 6
push pointer 0
call Snake.draw 1
pop temp 0
push pointer 0
return
function Snake.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 6
call Array.Length 1
lt
not
if-goto WHILE_END0
push local 1
push this 6
add
pop pointer 1
push that 0
pop local 0
push local 0
call snake_segments.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Snake.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 2
call Math.multiply 2
push this 1
push this 2
call Math.multiply 2
push this 0
push this 2
call Math.multiply 2
push this 2
push constant 1
sub
add
push this 1
push this 2
call Math.multiply 2
push this 2
push constant 1
sub
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Snake.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 2
call Math.multiply 2
push this 1
push this 2
call Math.multiply 2
push this 0
push this 2
call Math.multiply 2
push this 2
push constant 1
sub
add
push this 1
push this 2
call Math.multiply 2
push this 2
push constant 1
sub
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Snake.increment 1
push argument 0
pop pointer 0
push this 4
push this 5
push this 2
call SnakeSegment.new 3
pop local 0
push this 7
push this 6
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 7
push constant 1
add
pop this 7
push constant 0
return
function Snake.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Snake.erase 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push pointer 0
call Snake.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Snake.moveDown 0
push argument 0
pop pointer 0
push this 1
push constant 256
push this 2
call Math.divide 2
push constant 3
sub
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Snake.erase 1
pop temp 0
push this 1
push constant 1
add
pop this 1
push pointer 0
call Snake.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Snake.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Snake.erase 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push pointer 0
call Snake.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Snake.moveRight 0
push argument 0
pop pointer 0
push this 0
push constant 512
push this 2
call Math.divide 2
push constant 1
sub
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Snake.erase 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push pointer 0
call Snake.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Snake.move 4
push argument 0
pop pointer 0
push constant 0
not
pop local 3
push this 7
push constant 1
sub
pop local 0
push this 0
pop this 4
push this 1
pop this 5
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 2
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Snake.moveUp 1
pop temp 0
push pointer 0
push argument 1
call Snake.setDirection 2
pop temp 0
goto IF_END1
label IF_FALSE1
push pointer 0
call Snake.moveDown 1
pop temp 0
label IF_END1
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push constant 1
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Snake.moveDown 1
pop temp 0
push pointer 0
push argument 1
call Snake.setDirection 2
pop temp 0
goto IF_END3
label IF_FALSE3
push pointer 0
call Snake.moveUp 1
pop temp 0
label IF_END3
label IF_FALSE2
push argument 1
push constant 3
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 3
push constant 4
eq
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
call Snake.moveLeft 1
pop temp 0
push pointer 0
push argument 1
call Snake.setDirection 2
pop temp 0
goto IF_END5
label IF_FALSE5
push pointer 0
call Snake.moveRight 1
pop temp 0
label IF_END5
label IF_FALSE4
push argument 1
push constant 4
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 3
push constant 3
eq
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
call Snake.moveRight 1
pop temp 0
push pointer 0
push argument 1
call Snake.setDirection 2
pop temp 0
goto IF_END7
label IF_FALSE7
push pointer 0
call Snake.moveLeft 1
pop temp 0
label IF_END7
label IF_FALSE6
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push this 6
add
pop pointer 1
push that 0
pop local 1
push local 0
push constant 1
sub
push this 6
add
pop pointer 1
push that 0
pop local 2
push local 1
push local 2
call SnakeSegment.getX 1
push local 2
call SnakeSegment.getY 1
push local 3
call SnakeSegment.move 4
pop temp 0
push local 0
push constant 1
sub
pop local 0
push constant 0
pop local 3
goto WHILE_EXP0
label WHILE_END0
push this 7
push constant 1
gt
push this 7
push constant 1
eq
or
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 0
push this 6
add
pop pointer 1
push that 0
pop local 1
push local 1
push this 4
push this 5
push local 3
call SnakeSegment.move 4
pop temp 0
label IF_FALSE8
push argument 2
call Sys.wait 1
pop temp 0
push constant 0
return
function Snake.getDirection 0
push argument 0
pop pointer 0
push this 3
return
function Snake.setDirection 0
push argument 0
pop pointer 0
push argument 1
pop this 3
push constant 0
return
function Snake.getX 0
push argument 0
pop pointer 0
push this 0
return
function Snake.getY 0
push argument 0
pop pointer 0
push this 1
return
